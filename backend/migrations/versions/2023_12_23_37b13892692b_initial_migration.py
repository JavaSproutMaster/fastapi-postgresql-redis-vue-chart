"""initial migration

Revision ID: 37b13892692b
Revises: 
Create Date: 2023-12-23 15:53:15.363278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37b13892692b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('short_name', sa.String(length=64), nullable=True),
    sa.Column('keywords', sa.Text(), nullable=False),
    sa.Column('logo', sa.Text(), nullable=True),
    sa.Column('founded', sa.Integer(), nullable=True),
    sa.Column('employees', sa.Integer(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('data_source', sa.Enum('IEXCLOUD', 'POLYGONIO', 'CUSTOM', name='financialsource'), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies')),
    sa.UniqueConstraint('id', name=op.f('uq_companies_id'))
    )
    op.create_index(op.f('ix_companies_symbol'), 'companies', ['symbol'], unique=True)
    op.create_table('users',
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('id', name=op.f('uq_users_id'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('ceo',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_ceo_company_id_companies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ceo')),
    sa.UniqueConstraint('id', name=op.f('uq_ceo_id'))
    )
    op.create_table('comments',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('column', sa.Text(), nullable=True),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_comments_company_id_companies'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_comments_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_comments')),
    sa.UniqueConstraint('id', name=op.f('uq_comments_id'))
    )
    op.create_table('financials',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.Enum('IEXCLOUD', 'POLYGONIO', 'CUSTOM', name='financialsource'), nullable=True),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('quarter', sa.Integer(), nullable=True),
    sa.Column('net_income', sa.BigInteger(), nullable=True),
    sa.Column('shares_outstanding', sa.BigInteger(), nullable=True),
    sa.Column('free_cash_flow', sa.Float(), nullable=True),
    sa.Column('cash_flow_from_operating_activities', sa.Float(), nullable=True),
    sa.Column('dividends_per_share', sa.Float(), nullable=True),
    sa.Column('revenue', sa.BigInteger(), nullable=True),
    sa.Column('capex', sa.BigInteger(), nullable=True),
    sa.Column('total_assets', sa.BigInteger(), nullable=True),
    sa.Column('total_liabilities', sa.BigInteger(), nullable=True),
    sa.Column('net_debt', sa.BigInteger(), nullable=True),
    sa.Column('interest_coverage', sa.Float(), nullable=True),
    sa.Column('dividend_yield', sa.Float(), nullable=True),
    sa.Column('min_stock_price', sa.Float(), nullable=True),
    sa.Column('max_stock_price', sa.Float(), nullable=True),
    sa.Column('price_earnings_ratio_ltm', sa.Float(), nullable=True),
    sa.Column('minority_interest', sa.Float(), server_default='0', nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_financials_company_id_companies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_financials')),
    sa.UniqueConstraint('id', name=op.f('uq_financials_id'))
    )
    op.create_table('forecasts',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_forecasts_company_id_companies'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_forecasts_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forecasts')),
    sa.UniqueConstraint('id', name=op.f('uq_forecasts_id'))
    )
    op.create_table('prices',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], name=op.f('fk_prices_company_id_companies'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prices')),
    sa.UniqueConstraint('id', name=op.f('uq_prices_id'))
    )
    op.create_table('forecasts_fields',
    sa.Column('forecast_id', sa.Integer(), nullable=False),
    sa.Column('column', sa.Text(), nullable=False),
    sa.Column('field', sa.Text(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['forecast_id'], ['forecasts.id'], name=op.f('fk_forecasts_fields_forecast_id_forecasts'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_forecasts_fields')),
    sa.UniqueConstraint('id', name=op.f('uq_forecasts_fields_id'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('forecasts_fields')
    op.drop_table('prices')
    op.drop_table('forecasts')
    op.drop_table('financials')
    op.drop_table('comments')
    op.drop_table('ceo')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_companies_symbol'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
